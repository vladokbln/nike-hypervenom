/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@facebook-name: 'facebook';
@facebook-x: 0px;
@facebook-y: 58px;
@facebook-offset-x: 0px;
@facebook-offset-y: -58px;
@facebook-width: 7px;
@facebook-height: 14px;
@facebook-total-width: 80px;
@facebook-total-height: 72px;
@facebook-image: '../img/sprite/sprite.png';
@facebook: 0px 58px 0px -58px 7px 14px 80px 72px '../img/sprite/sprite.png' 'facebook';
@nike-name: 'nike';
@nike-x: 0px;
@nike-y: 0px;
@nike-offset-x: 0px;
@nike-offset-y: 0px;
@nike-width: 80px;
@nike-height: 28px;
@nike-total-width: 80px;
@nike-total-height: 72px;
@nike-image: '../img/sprite/sprite.png';
@nike: 0px 0px 0px 0px 80px 28px 80px 72px '../img/sprite/sprite.png' 'nike';
@skype-name: 'skype';
@skype-x: 48px;
@skype-y: 28px;
@skype-offset-x: -48px;
@skype-offset-y: -28px;
@skype-width: 13px;
@skype-height: 14px;
@skype-total-width: 80px;
@skype-total-height: 72px;
@skype-image: '../img/sprite/sprite.png';
@skype: 48px 28px -48px -28px 13px 14px 80px 72px '../img/sprite/sprite.png' 'skype';
@slack-name: 'slack';
@slack-x: 61px;
@slack-y: 28px;
@slack-offset-x: -61px;
@slack-offset-y: -28px;
@slack-width: 13px;
@slack-height: 14px;
@slack-total-width: 80px;
@slack-total-height: 72px;
@slack-image: '../img/sprite/sprite.png';
@slack: 61px 28px -61px -28px 13px 14px 80px 72px '../img/sprite/sprite.png' 'slack';
@smile-name: 'smile';
@smile-x: 0px;
@smile-y: 44px;
@smile-offset-x: 0px;
@smile-offset-y: -44px;
@smile-width: 13px;
@smile-height: 14px;
@smile-total-width: 80px;
@smile-total-height: 72px;
@smile-image: '../img/sprite/sprite.png';
@smile: 0px 44px 0px -44px 13px 14px 80px 72px '../img/sprite/sprite.png' 'smile';
@star-border-name: 'star-border';
@star-border-x: 0px;
@star-border-y: 28px;
@star-border-offset-x: 0px;
@star-border-offset-y: -28px;
@star-border-width: 16px;
@star-border-height: 16px;
@star-border-total-width: 80px;
@star-border-total-height: 72px;
@star-border-image: '../img/sprite/sprite.png';
@star-border: 0px 28px 0px -28px 16px 16px 80px 72px '../img/sprite/sprite.png' 'star-border';
@star-half-name: 'star-half';
@star-half-x: 16px;
@star-half-y: 28px;
@star-half-offset-x: -16px;
@star-half-offset-y: -28px;
@star-half-width: 16px;
@star-half-height: 16px;
@star-half-total-width: 80px;
@star-half-total-height: 72px;
@star-half-image: '../img/sprite/sprite.png';
@star-half: 16px 28px -16px -28px 16px 16px 80px 72px '../img/sprite/sprite.png' 'star-half';
@star-name: 'star';
@star-x: 32px;
@star-y: 28px;
@star-offset-x: -32px;
@star-offset-y: -28px;
@star-width: 16px;
@star-height: 16px;
@star-total-width: 80px;
@star-total-height: 72px;
@star-image: '../img/sprite/sprite.png';
@star: 32px 28px -32px -28px 16px 16px 80px 72px '../img/sprite/sprite.png' 'star';
@twitter-name: 'twitter';
@twitter-x: 13px;
@twitter-y: 44px;
@twitter-offset-x: -13px;
@twitter-offset-y: -44px;
@twitter-width: 13px;
@twitter-height: 11px;
@twitter-total-width: 80px;
@twitter-total-height: 72px;
@twitter-image: '../img/sprite/sprite.png';
@twitter: 13px 44px -13px -44px 13px 11px 80px 72px '../img/sprite/sprite.png' 'twitter';
@spritesheet-width: 80px;
@spritesheet-height: 72px;
@spritesheet-image: '../img/sprite/sprite.png';
@spritesheet-sprites: @facebook @nike @skype @slack @smile @star-border @star-half @star @twitter;
@spritesheet: 80px 72px '../img/sprite/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
